name: CI/CD to EC2

on:
  push:
    branches: [ "QA" ]

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t anggeloo/microservice-delete-order:latest .
          docker tag anggeloo/microservice-delete-order:latest anggeloo/microservice-delete-order:${{ github.sha }}

      - name: Push Docker Image
        run: |
          docker push anggeloo/microservice-delete-order:latest
          docker push anggeloo/microservice-delete-order:${{ github.sha }}

  deploy-to-ec2:
    needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            echo "Starting deployment on EC2..."
            
            # 1) Navigate to the directory where docker-compose.yml is located
            cd /home/ubuntu/
            
            # 2) Pull the latest image from Docker Hub
            docker pull anggeloo/microservice-delete-order:latest
            
            # 3) Stop and remove previous containers
            docker-compose down
            
            # 4) Create the .env file with the correct credentials
            echo "MYSQL_CONNECTION_STRING=Server=${{ secrets.DB_HOST }};Database=${{ secrets.DB_NAME }};User=${{ secrets.DB_USER }};Password=${{ secrets.DB_PASS }}" > .env
            echo "PORT=${{ secrets.PORT }}" >> .env
            
            # 5) Start new containers using docker-compose
            docker-compose up -d --remove-orphans
            
            echo "Deployment successfully completed."
